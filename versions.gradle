/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

// Android
versions.androidx_support = "1.0.0-rc01"
versions.androidx_arch = "2.0.0-rc01"
versions.android_gradle_plugin = '3.2.0-rc02'
versions.android_ktx = "1.0.0-rc01"
versions.constraint_layout = "1.1.2"

// Architecture Components
versions.arch_work = "1.0.0-alpha07"

// Dagger
versions.dagger = "2.16"

// Kotlin
versions.anko = "0.10.5"
versions.kotlin = "1.2.61"

// Google
versions.google_location = "15.0.1"
versions.google_firestore = "17.0.3"

// OkHttp
versions.okhttp3 = "3.11.0"

// Retrofit
versions.retrofit = "2.4.0"

// Timber
versions.timber = "4.7.0"

// Third party
versions.material_drawer_kt = "1.3.5"
versions.material_search_view = "1.4.0"

// Testing
versions.espresso = "3.0.2"
versions.junit = "4.12"
versions.mockito_core = "2.19.0"

def deps = [:]

def android = [:]
android.android_ktx = "androidx.core:core-ktx:$versions.android_ktx"
android.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
android.app_compat = "androidx.appcompat:appcompat:$versions.androidx_support"
android.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_support"
android.design = "com.google.android.material:material:$versions.androidx_support"
android.v4 = "androidx.legacy:legacy-support-v4:$versions.androidx_support"
android.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.android = android

def arch = [:]
arch.lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime:$versions.androidx_arch"
arch.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_arch"
arch.lifecycle_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.androidx_arch"
arch.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$versions.androidx_arch"
arch.paging = "androidx.paging:paging-runtime:$versions.androidx_arch"
arch.room_runtime = "androidx.room:room-runtime:$versions.androidx_arch"
arch.room_compiler = "androidx.room:room-compiler:$versions.androidx_arch"
arch.work_testing = "android.arch.work:work-testing:$versions.arch_work"
arch.work_runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.arch_work"
deps.arch = arch

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def kotlin = [:]
kotlin.anko = "org.jetbrains.anko:anko-coroutines:$versions.anko"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.android_extensions = "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin"
deps.kotlin = kotlin

def google = [:]
google.firestore = "com.google.firebase:firebase-firestore:$versions.google_firestore"
google.location = "com.google.android.gms:play-services-location:$versions.google_location"
deps.google = google

def okhttp = [:]
okhttp.okhttp3 = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
deps.okhttp = okhttp

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
//retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.moshi_converter = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
deps.retrofit = retrofit

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

def thirdParty = [:]
thirdParty.material_drawer_kt = "co.zsmb:materialdrawer-kt:$versions.material_drawer_kt"
thirdParty.material_search_view = "com.miguelcatalan:materialsearchview:$versions.material_search_view"
deps.thirdParty = thirdParty

def testing = [:]
testing.arch_core = "androidx.arch.core:core-testing:$versions.androidx_arch"
testing.espresso_core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
testing.espresso_contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
testing.espresso_intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
testing.junit = "junit:junit:$versions.junit"
testing.mockito_core = "org.mockito:mockito-core:$versions.mockito_core"
testing.mockito_android = "org.mockito:mockito-android:$versions.mockito_core"
testing.mockito_inline = "org.mockito:mockito-inline:$versions.mockito_core"
deps.testing = testing

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
ext.build_versions = build_versions

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://maven.google.com' }
}

ext.addRepos = this.&addRepos
